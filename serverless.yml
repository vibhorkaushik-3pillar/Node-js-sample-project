service: nodejs-admin

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  profile: ServerlessAccountNodeAdmin

functions:
  createTables:
    handler: modules/DB/CreateTables.handler
    events:
      - http:
          path: create-tables/{key}
          method: GET
          cors: true
  addProject:
    handler: modules/Project/AddProject.handler
    events:
      - http:
          path: add-project/{name}
          method: GET
          cors: true
  getProject:
    handler: modules/Project/GetProject.handler
    events:
      - http:
          path: get-project/{name}
          method: GET
          cors: true
          documentation:
            summary: "Create something"
            description: "Creates the thing you need"
            tags:
              - "Data Creation"
              - "Some other tag"
            requestBody:
              description: "Request body description"
            requestHeaders:
              - name: "x-header"
                description: "Header description"
              - name: "Authorization"
                description: "Auth Header description"
            queryParams:
              - name: "sid"
                description: "Session ID"
              - name: "theme"
                description: "Theme for for the website"
            pathParams:
              - name: "id"
                description: "ID of the thing you want to create"
            requestModels:
              "application/json": "CreateRequest"
              "application/xml": "CreateRequestXml"
            methodResponses:
              - statusCode: "200"
                responseBody:
                  description: "Response body description"
                responseHeaders:
                  - name: "x-superheader"
                    description: "this is a super header"
                responseModels:
                  "application/json": "CreateResponse"
              - statusCode: "400"
                responseModels:
                  "application/json": "ErrorResponse"
  deleteProject:
    handler: modules/Project/DeleteProject.handler
    events:
      - http:
          path: project/{id}/{name}
          method: DELETE
          cors: true
          request:
            parameters:
              paths:
                id: true,
                name: true
  addRoutes:
    handler: modules/Routes/AddRoutes.handler
    events:
      - http:
          path: project/addroutes/{projectId}
          method: POST
          cors: true,
          request:
            parameters:
              paths:
                projectId: true,
  getRoutes:
    handler: modules/Routes/GetRoutes.handler
    events:
      - http:
          path: project/getroutes/{projectId}
          method: GET
          cors: true,
          request:
            parameters:
              paths:
                projectId: true,
plugins:
  - serverless-offline
  - serverless-aws-documentation
